// this file was generated by gomacro command: import _b "debug/macho"
// DO NOT EDIT! Any change will be lost when the file is re-generated

// +build go1.11

package go1_11

import (
	. "reflect"
	macho "debug/macho"
)

// reflection: allow interpreted code to import "debug/macho"
func init() {
	Packages["debug/macho"] = Package{
	Binds: map[string]Value{
		"ARM64_RELOC_ADDEND":	ValueOf(macho.ARM64_RELOC_ADDEND),
		"ARM64_RELOC_BRANCH26":	ValueOf(macho.ARM64_RELOC_BRANCH26),
		"ARM64_RELOC_GOT_LOAD_PAGE21":	ValueOf(macho.ARM64_RELOC_GOT_LOAD_PAGE21),
		"ARM64_RELOC_GOT_LOAD_PAGEOFF12":	ValueOf(macho.ARM64_RELOC_GOT_LOAD_PAGEOFF12),
		"ARM64_RELOC_PAGE21":	ValueOf(macho.ARM64_RELOC_PAGE21),
		"ARM64_RELOC_PAGEOFF12":	ValueOf(macho.ARM64_RELOC_PAGEOFF12),
		"ARM64_RELOC_POINTER_TO_GOT":	ValueOf(macho.ARM64_RELOC_POINTER_TO_GOT),
		"ARM64_RELOC_SUBTRACTOR":	ValueOf(macho.ARM64_RELOC_SUBTRACTOR),
		"ARM64_RELOC_TLVP_LOAD_PAGE21":	ValueOf(macho.ARM64_RELOC_TLVP_LOAD_PAGE21),
		"ARM64_RELOC_TLVP_LOAD_PAGEOFF12":	ValueOf(macho.ARM64_RELOC_TLVP_LOAD_PAGEOFF12),
		"ARM64_RELOC_UNSIGNED":	ValueOf(macho.ARM64_RELOC_UNSIGNED),
		"ARM_RELOC_BR24":	ValueOf(macho.ARM_RELOC_BR24),
		"ARM_RELOC_HALF":	ValueOf(macho.ARM_RELOC_HALF),
		"ARM_RELOC_HALF_SECTDIFF":	ValueOf(macho.ARM_RELOC_HALF_SECTDIFF),
		"ARM_RELOC_LOCAL_SECTDIFF":	ValueOf(macho.ARM_RELOC_LOCAL_SECTDIFF),
		"ARM_RELOC_PAIR":	ValueOf(macho.ARM_RELOC_PAIR),
		"ARM_RELOC_PB_LA_PTR":	ValueOf(macho.ARM_RELOC_PB_LA_PTR),
		"ARM_RELOC_SECTDIFF":	ValueOf(macho.ARM_RELOC_SECTDIFF),
		"ARM_RELOC_VANILLA":	ValueOf(macho.ARM_RELOC_VANILLA),
		"ARM_THUMB_32BIT_BRANCH":	ValueOf(macho.ARM_THUMB_32BIT_BRANCH),
		"ARM_THUMB_RELOC_BR22":	ValueOf(macho.ARM_THUMB_RELOC_BR22),
		"Cpu386":	ValueOf(macho.Cpu386),
		"CpuAmd64":	ValueOf(macho.CpuAmd64),
		"CpuArm":	ValueOf(macho.CpuArm),
		"CpuArm64":	ValueOf(macho.CpuArm64),
		"CpuPpc":	ValueOf(macho.CpuPpc),
		"CpuPpc64":	ValueOf(macho.CpuPpc64),
		"ErrNotFat":	ValueOf(&macho.ErrNotFat).Elem(),
		"FlagAllModsBound":	ValueOf(macho.FlagAllModsBound),
		"FlagAllowStackExecution":	ValueOf(macho.FlagAllowStackExecution),
		"FlagAppExtensionSafe":	ValueOf(macho.FlagAppExtensionSafe),
		"FlagBindAtLoad":	ValueOf(macho.FlagBindAtLoad),
		"FlagBindsToWeak":	ValueOf(macho.FlagBindsToWeak),
		"FlagCanonical":	ValueOf(macho.FlagCanonical),
		"FlagDeadStrippableDylib":	ValueOf(macho.FlagDeadStrippableDylib),
		"FlagDyldLink":	ValueOf(macho.FlagDyldLink),
		"FlagForceFlat":	ValueOf(macho.FlagForceFlat),
		"FlagHasTLVDescriptors":	ValueOf(macho.FlagHasTLVDescriptors),
		"FlagIncrLink":	ValueOf(macho.FlagIncrLink),
		"FlagLazyInit":	ValueOf(macho.FlagLazyInit),
		"FlagNoFixPrebinding":	ValueOf(macho.FlagNoFixPrebinding),
		"FlagNoHeapExecution":	ValueOf(macho.FlagNoHeapExecution),
		"FlagNoMultiDefs":	ValueOf(macho.FlagNoMultiDefs),
		"FlagNoReexportedDylibs":	ValueOf(macho.FlagNoReexportedDylibs),
		"FlagNoUndefs":	ValueOf(macho.FlagNoUndefs),
		"FlagPIE":	ValueOf(macho.FlagPIE),
		"FlagPrebindable":	ValueOf(macho.FlagPrebindable),
		"FlagPrebound":	ValueOf(macho.FlagPrebound),
		"FlagRootSafe":	ValueOf(macho.FlagRootSafe),
		"FlagSetuidSafe":	ValueOf(macho.FlagSetuidSafe),
		"FlagSplitSegs":	ValueOf(macho.FlagSplitSegs),
		"FlagSubsectionsViaSymbols":	ValueOf(macho.FlagSubsectionsViaSymbols),
		"FlagTwoLevel":	ValueOf(macho.FlagTwoLevel),
		"FlagWeakDefines":	ValueOf(macho.FlagWeakDefines),
		"GENERIC_RELOC_LOCAL_SECTDIFF":	ValueOf(macho.GENERIC_RELOC_LOCAL_SECTDIFF),
		"GENERIC_RELOC_PAIR":	ValueOf(macho.GENERIC_RELOC_PAIR),
		"GENERIC_RELOC_PB_LA_PTR":	ValueOf(macho.GENERIC_RELOC_PB_LA_PTR),
		"GENERIC_RELOC_SECTDIFF":	ValueOf(macho.GENERIC_RELOC_SECTDIFF),
		"GENERIC_RELOC_TLV":	ValueOf(macho.GENERIC_RELOC_TLV),
		"GENERIC_RELOC_VANILLA":	ValueOf(macho.GENERIC_RELOC_VANILLA),
		"LoadCmdDylib":	ValueOf(macho.LoadCmdDylib),
		"LoadCmdDylinker":	ValueOf(macho.LoadCmdDylinker),
		"LoadCmdDysymtab":	ValueOf(macho.LoadCmdDysymtab),
		"LoadCmdRpath":	ValueOf(macho.LoadCmdRpath),
		"LoadCmdSegment":	ValueOf(macho.LoadCmdSegment),
		"LoadCmdSegment64":	ValueOf(macho.LoadCmdSegment64),
		"LoadCmdSymtab":	ValueOf(macho.LoadCmdSymtab),
		"LoadCmdThread":	ValueOf(macho.LoadCmdThread),
		"LoadCmdUnixThread":	ValueOf(macho.LoadCmdUnixThread),
		"Magic32":	ValueOf(macho.Magic32),
		"Magic64":	ValueOf(macho.Magic64),
		"MagicFat":	ValueOf(macho.MagicFat),
		"NewFatFile":	ValueOf(macho.NewFatFile),
		"NewFile":	ValueOf(macho.NewFile),
		"Open":	ValueOf(macho.Open),
		"OpenFat":	ValueOf(macho.OpenFat),
		"TypeBundle":	ValueOf(macho.TypeBundle),
		"TypeDylib":	ValueOf(macho.TypeDylib),
		"TypeExec":	ValueOf(macho.TypeExec),
		"TypeObj":	ValueOf(macho.TypeObj),
		"X86_64_RELOC_BRANCH":	ValueOf(macho.X86_64_RELOC_BRANCH),
		"X86_64_RELOC_GOT":	ValueOf(macho.X86_64_RELOC_GOT),
		"X86_64_RELOC_GOT_LOAD":	ValueOf(macho.X86_64_RELOC_GOT_LOAD),
		"X86_64_RELOC_SIGNED":	ValueOf(macho.X86_64_RELOC_SIGNED),
		"X86_64_RELOC_SIGNED_1":	ValueOf(macho.X86_64_RELOC_SIGNED_1),
		"X86_64_RELOC_SIGNED_2":	ValueOf(macho.X86_64_RELOC_SIGNED_2),
		"X86_64_RELOC_SIGNED_4":	ValueOf(macho.X86_64_RELOC_SIGNED_4),
		"X86_64_RELOC_SUBTRACTOR":	ValueOf(macho.X86_64_RELOC_SUBTRACTOR),
		"X86_64_RELOC_TLV":	ValueOf(macho.X86_64_RELOC_TLV),
		"X86_64_RELOC_UNSIGNED":	ValueOf(macho.X86_64_RELOC_UNSIGNED),
	}, Types: map[string]Type{
		"Cpu":	TypeOf((*macho.Cpu)(nil)).Elem(),
		"Dylib":	TypeOf((*macho.Dylib)(nil)).Elem(),
		"DylibCmd":	TypeOf((*macho.DylibCmd)(nil)).Elem(),
		"Dysymtab":	TypeOf((*macho.Dysymtab)(nil)).Elem(),
		"DysymtabCmd":	TypeOf((*macho.DysymtabCmd)(nil)).Elem(),
		"FatArch":	TypeOf((*macho.FatArch)(nil)).Elem(),
		"FatArchHeader":	TypeOf((*macho.FatArchHeader)(nil)).Elem(),
		"FatFile":	TypeOf((*macho.FatFile)(nil)).Elem(),
		"File":	TypeOf((*macho.File)(nil)).Elem(),
		"FileHeader":	TypeOf((*macho.FileHeader)(nil)).Elem(),
		"FormatError":	TypeOf((*macho.FormatError)(nil)).Elem(),
		"Load":	TypeOf((*macho.Load)(nil)).Elem(),
		"LoadBytes":	TypeOf((*macho.LoadBytes)(nil)).Elem(),
		"LoadCmd":	TypeOf((*macho.LoadCmd)(nil)).Elem(),
		"Nlist32":	TypeOf((*macho.Nlist32)(nil)).Elem(),
		"Nlist64":	TypeOf((*macho.Nlist64)(nil)).Elem(),
		"Regs386":	TypeOf((*macho.Regs386)(nil)).Elem(),
		"RegsAMD64":	TypeOf((*macho.RegsAMD64)(nil)).Elem(),
		"Reloc":	TypeOf((*macho.Reloc)(nil)).Elem(),
		"RelocTypeARM":	TypeOf((*macho.RelocTypeARM)(nil)).Elem(),
		"RelocTypeARM64":	TypeOf((*macho.RelocTypeARM64)(nil)).Elem(),
		"RelocTypeGeneric":	TypeOf((*macho.RelocTypeGeneric)(nil)).Elem(),
		"RelocTypeX86_64":	TypeOf((*macho.RelocTypeX86_64)(nil)).Elem(),
		"Rpath":	TypeOf((*macho.Rpath)(nil)).Elem(),
		"RpathCmd":	TypeOf((*macho.RpathCmd)(nil)).Elem(),
		"Section":	TypeOf((*macho.Section)(nil)).Elem(),
		"Section32":	TypeOf((*macho.Section32)(nil)).Elem(),
		"Section64":	TypeOf((*macho.Section64)(nil)).Elem(),
		"SectionHeader":	TypeOf((*macho.SectionHeader)(nil)).Elem(),
		"Segment":	TypeOf((*macho.Segment)(nil)).Elem(),
		"Segment32":	TypeOf((*macho.Segment32)(nil)).Elem(),
		"Segment64":	TypeOf((*macho.Segment64)(nil)).Elem(),
		"SegmentHeader":	TypeOf((*macho.SegmentHeader)(nil)).Elem(),
		"Symbol":	TypeOf((*macho.Symbol)(nil)).Elem(),
		"Symtab":	TypeOf((*macho.Symtab)(nil)).Elem(),
		"SymtabCmd":	TypeOf((*macho.SymtabCmd)(nil)).Elem(),
		"Thread":	TypeOf((*macho.Thread)(nil)).Elem(),
		"Type":	TypeOf((*macho.Type)(nil)).Elem(),
	}, Proxies: map[string]Type{
		"Load":	TypeOf((*P_debug_macho_Load)(nil)).Elem(),
	}, Wrappers: map[string][]string{
		"Dylib":	[]string{"Raw",},
		"Dysymtab":	[]string{"Raw",},
		"FatArch":	[]string{"Close","DWARF","ImportedLibraries","ImportedSymbols","Section","Segment",},
		"Rpath":	[]string{"Raw",},
		"Segment":	[]string{"Raw",},
		"Symtab":	[]string{"Raw",},
	}, 
	}
}

// --------------- proxy for debug/macho.Load ---------------
type P_debug_macho_Load struct {
	Object	interface{}
	Raw_	func(interface{}) []byte
}
func (P *P_debug_macho_Load) Raw() []byte {
	return P.Raw_(P.Object)
}
